[package]
name = "nym-vpn-lib"
version.workspace = true
authors.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
edition.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "lib", "staticlib"]

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
bincode.workspace = true
bs58.workspace = true
bytes.workspace = true
futures.workspace = true
hickory-resolver.workspace = true
ipnetwork.workspace = true
itertools.workspace = true
lazy_static.workspace = true
log.workspace = true
netdev.workspace = true
pnet_packet.workspace = true
rand.workspace = true
serde.workspace = true
serde_json.workspace = true
si-scale.workspace = true
signature.workspace = true
sysinfo.workspace = true
tap.workspace = true
thiserror.workspace = true
time.workspace = true
tokio = { workspace = true, features = [
    "process",
    "rt-multi-thread",
    "fs",
    "sync",
] }
tokio-stream.workspace = true
tokio-util = { workspace = true, features = ["codec", "rt"] }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tracing.workspace = true
tun = { workspace = true, features = ["async"] }
uniffi.workspace = true
url.workspace = true

nym-authenticator-requests.workspace = true
nym-bandwidth-controller.workspace = true
nym-bin-common.workspace = true
nym-client-core.workspace = true
nym-config.workspace = true
nym-credential-storage.workspace = true
nym-credentials-interface.workspace = true
nym-crypto.workspace = true
nym-ip-packet-requests.workspace = true
nym-node-requests.workspace = true
nym-pemstore.workspace = true
nym-sdk.workspace = true
nym-task.workspace = true
nym-topology.workspace = true
nym-validator-client.workspace = true
nym-wireguard-types.workspace = true

nym-authenticator-client = { path = "../nym-authenticator-client" }
nym-connection-monitor = { path = "../nym-connection-monitor" }
nym-gateway-directory = { path = "../nym-gateway-directory" }
nym-ip-packet-client = { path = "../nym-ip-packet-client" }
nym-vpn-account-controller = { path = "../nym-vpn-account-controller" }
nym-vpn-api-client = { path = "../nym-vpn-api-client" }
nym-vpn-network-config = { path = "../nym-vpn-network-config" }
nym-vpn-store = { path = "../nym-vpn-store" }
nym-wg-gateway-client = { path = "../nym-wg-gateway-client" }
nym-wg-go = { path = "../nym-wg-go" }

[target.'cfg(unix)'.dependencies]
nix = { workspace = true, features = ["socket", "net", "fs"] }

[target.'cfg(any(target_os = "linux", target_os = "macos", target_os = "windows"))'.dependencies]
nym-routing = { path = "../nym-routing" }
nym-dns = { path = "../nym-dns" }

[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.14.1"
err-derive = "0.3.1"
jnix = { version = "=0.5.1", features = ["derive"] }
rand.workspace = true

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
oslog = "0.2.0"

[build-dependencies]
uniffi = { workspace = true, features = ["build"] }
vergen = { workspace = true, default-features = false, features = [
    "build",
    "git",
    "gitcl",
    "rustc",
    "cargo",
] }

[features]
metrics-server = ["nym-client-core/metrics-server"]

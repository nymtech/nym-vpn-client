[package]
name = "nym-vpn-lib"
version = "0.1.11-dev"
edition = "2021"
license = "GPL-3.0-only"

[lib]
crate-type = ["cdylib", "lib", "staticlib"]

[[bin]]
name = "uniffi-bindgen"
path = "uniffi-bindgen.rs"

[dependencies]
anyhow.workspace = true
bincode.workspace = true
bs58.workspace = true
bytes.workspace = true
futures.workspace = true
hickory-resolver.workspace = true
ipnetwork.workspace = true
itertools.workspace = true
lazy_static.workspace = true
log.workspace = true
netdev.workspace = true
pnet_packet.workspace = true
rand.workspace = true
serde.workspace = true
serde_json.workspace = true
signature.workspace = true
tap.workspace = true
thiserror.workspace = true
time.workspace = true
tokio = { workspace = true, features = [
    "process",
    "rt-multi-thread",
    "fs",
    "sync",
] }
tokio-stream.workspace = true
tokio-util = { workspace = true, features = ["codec"] }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tracing.workspace = true
tun2 = { workspace = true, features = ["async"] }
uniffi = { workspace = true, features = ["cli"] }
url.workspace = true

talpid-core = { path = "../../../mullvadvpn-app-clone/talpid-core" }
talpid-platform-metadata = { path = "../../../mullvadvpn-app-clone/talpid-platform-metadata" }
talpid-routing = { path = "../../../mullvadvpn-app-clone/talpid-routing" }
talpid-tunnel = { path = "../../../mullvadvpn-app-clone/talpid-tunnel" }
talpid-types = { path = "../../../mullvadvpn-app-clone/talpid-types" }
talpid-wireguard = { path = "../../../mullvadvpn-app-clone/talpid-wireguard" }

nym-authenticator-requests.workspace = true
nym-bandwidth-controller.workspace = true
nym-bin-common.workspace = true
nym-client-core.workspace = true
nym-config.workspace = true
nym-credential-storage.workspace = true
nym-credentials.workspace = true
nym-crypto.workspace = true
nym-explorer-client.workspace = true
nym-id.workspace = true
nym-ip-packet-requests.workspace = true
nym-node-requests.workspace = true
nym-pemstore.workspace = true
nym-sdk.workspace = true
nym-task.workspace = true
nym-topology.workspace = true
nym-validator-client.workspace = true
nym-wireguard-types.workspace = true

nym-authenticator-client = { path = "../crates/nym-authenticator-client" }
nym-connection-monitor = { path = "../crates/nym-connection-monitor" }
nym-gateway-directory = { path = "../crates/nym-gateway-directory" }
nym-ip-packet-client = { path = "../crates/nym-ip-packet-client" }
nym-vpn-store = { path = "../crates/nym-vpn-store" }

[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.14.1"
err-derive = "0.3.1"
jnix = { version = "=0.5.1", features = ["derive"] }
nix = "0.23"
rand = "0.8.5"

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
oslog = "0.2.0"

[target.'cfg(unix)'.dependencies]
nix = { version = "0.28.0", features = ["user"] }

[target.'cfg(windows)'.dependencies]
is_elevated = "0.1.2"


[build-dependencies]
uniffi = { version = "0.27.3", features = ["build"] }

[features]
metrics-server = ["nym-client-core/metrics-server"]

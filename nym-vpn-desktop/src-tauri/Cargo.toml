[package]
name = "nym-vpn-desktop"
version = "0.1.2-dev"
description = "Nym VPN Desktop Client"
authors = [
    "pierre <dommerc.pierre@gmail.com>",
    "zane <zanecschepke@gmail.com>",
    "nym",
]
license = "GPL-3.0-only"
repository = ""
edition = "2021"

[build-dependencies]
tauri-build = { version = "1.5", features = [] }
build-info-build = "0.0.34"

[dependencies]
tauri = { version = "1.6.0", features = [
    "window-set-size",
    "os-all",
    "updater",
    "process-all",
    "shell-open",
] }
tokio = { version = "1.33", features = ["rt", "sync", "time", "fs"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3.1", features = [
    "tracing-log",
    "env-filter",
] }
anyhow = "1.0"
dotenvy = "0.15.7"
thiserror = "1.0"
ts-rs = { version = "7.0.0", features = ["chrono-impl"] }
once_cell = "1.18.0"
toml = "0.8.5"
time = "0.3.9"
# TODO use the crate once it's published, for now use local path
nym-vpn-lib = { path = "../../nym-vpn-lib" }
futures = "0.3.15"
reqwest = { version = "0.11", features = ["json"] }
itertools = "0.12"
clap = { version = "4.5", features = ["derive"] }
build-info = "0.0.34"
sled = "0.34.7"
strum = { version = "0.26", features = ["derive"] }

# TODO Ugly workaround to force a working setup for nym-vpn-lib
# We should get rid of this ASAP
shadowsocks = { version = "~1.14.2" }
shadowsocks-service = { version = "~1.14.3" }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

# [patch."https://github.com/nymtech/nym"]
# nym-bandwidth-controller = { path = "../../../nym/common/bandwidth-controller" }
# nym-bin-common = { path = "../../../nym/common/bin-common" }
# nym-client-core = { path = "../../../nym/common/client-core" }
# nym-config = { path = "../../../nym/common/config" }
# nym-credential-storage = { path = "../../../nym/common/credential-storage" }
# nym-credentials = { path = "../../../nym/common/credentials" }
# nym-crypto = { path = "../../../nym/common/crypto" }
# nym-explorer-client = { path = "../../../nym/explorer-api/explorer-client" }
# nym-http-api-client = { path = "../../../nym/common/http-api-client" }
# nym-id = { path = "../../../nym/common/nym-id" }
# nym-ip-packet-requests = { path = "../../../nym/common/ip-packet-requests" }
# nym-node-requests = { path = "../../../nym/nym-node/nym-node-requests" }
# nym-sdk = { path = "../../../nym/sdk/rust/nym-sdk" }
# nym-task = { path = "../../../nym/common/task" }
# nym-topology = { path = "../../../nym/common/topology" }
# nym-validator-client = { path = "../../../nym/common/client-libs/validator-client" }
# nym-wireguard-types = { path = "../../../nym/common/wireguard-types" }

name: build-nym-vpn-core-deb
on: [workflow_dispatch, workflow_call]

env:
  CARGO_TERM_COLOR: always
  CARGO_TARGET: release
  WG_GO_LIB_PATH: ${{ github.workspace }}/build/lib/x86_64-unknown-linux-gnu
  WG_GO_LIB_NAME: wireguard-go_ubuntu-22.04_x86_64
  UPLOAD_DIR_DEB: deb_artifacts

jobs:
  build-wireguard-go-linux:
    uses: ./.github/workflows/build-wireguard-go-linux.yml

  build-linux:
    needs: build-wireguard-go-linux
    runs-on: ubuntu-22.04-arc
    outputs:
      UPLOAD_DIR_DEB: ${{ env.UPLOAD_DIR_DEB }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libdbus-1-dev libmnl-dev libnftnl-dev protobuf-compiler libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev squashfs-tools libayatana-appindicator3-dev make libfuse2 librsvg2-bin

      - name: Install rust toolchain
        uses: brndnmtthws/rust-action-rustup@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Setup cargo deb
        run: |
          cargo install --locked cargo-deb

      - name: Download wireguard-go artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.WG_GO_LIB_NAME }}
          path: ${{ env.WG_GO_LIB_PATH }}

      - name: Build nym-vpn-core debian packages
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }}"
        run: |
          cargo deb -p nym-vpnd
          cargo deb -p nym-vpnc
          cargo deb -p nym-vpn-cli
          ls -la target/debian/ || true

      - name: Move things around to prepare for upload
        env:
          SRC_BINARY: target/debian
        run: |
          mkdir ${{ env.UPLOAD_DIR_DEB }}
          cp -vpr ${{ env.SRC_BINARY }}/nym-vpnc_*_amd64.deb ${{ env.UPLOAD_DIR_DEB }}
          cp -vpr ${{ env.SRC_BINARY }}/nym-vpnd_*_amd64.deb ${{ env.UPLOAD_DIR_DEB }}
          cp -vpr ${{ env.SRC_BINARY }}/nym-vpn-cli_*_amd64.deb ${{ env.UPLOAD_DIR_DEB }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_DIR_DEB }}
          path: ${{ env.UPLOAD_DIR_DEB }}
          retention-days: 1

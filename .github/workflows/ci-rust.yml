name: ci-rust

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest]

    # env:
    #   LIBRARY_PATH: ${{ (matrix.os == 'ubuntu-22.04' && github.workspace + '/build/lib/x86_64-unknown-linux-gnu') || (matrix.os == 'macos-latest' && '/build/lib/aarch64-apple-darwin') }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libdbus-1-dev libmnl-dev libnftnl-dev protobuf-compiler
      if: matrix.os == 'ubuntu-22.04'

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Set LIBRARY_PATH
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
          echo "LIBRARY_PATH=${GITHUB_WORKSPACE}/build/lib/x86_64-unknown-linux-gnu" >> $GITHUB_ENV
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          echo "LIBRARY_PATH=${GITHUB_WORKSPACE}/build/lib/aarch64-apple-darwin" >> $GITHUB_ENV
        fi

    - name: Build wireguard
      run: ./wireguard/build-wireguard-go.sh

    - run: cargo fmt --all -- --check

    - name: Build
      run: RUSTFLAGS="-L ${LIBRARY_PATH}" cargo build --verbose

    - name: Run tests
      run: RUSTFLAGS="-L ${LIBRARY_PATH}" cargo test --verbose

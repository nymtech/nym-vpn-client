name: release-cli

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-wireguard-go:
    strategy:
      matrix:
        os: [ubuntu-22.04-16-core, macos-latest, custom-runner-mac-m1]
    uses: ./.github/workflows/build-wireguard-go.yml
    with:
      os: ${{ matrix.os }}

  build:
    needs: build-wireguard-go
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04-16-core, macos-latest, custom-runner-mac-m1]
    runs-on: ${{ matrix.os }}
    env:
      WG_GO_LIB_PATH: ${{ github.workspace }}/lib

    steps:
      - name: "Cleanup working directory"
        if: contains(matrix.os, 'custom')
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            nym-vpn-cli
            nym-vpn-lib

      - name: Install system dependencies
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install -y libdbus-1-dev libmnl-dev libnftnl-dev protobuf-compiler

      - name: Set env
        run: |
          if ${{ contains(matrix.os, 'ubuntu-22.04') }}; then
            platform_arch=ubuntu-22.04_x86_64
          elif ${{ contains(matrix.os, 'ubuntu-20.04') }}; then
            platform_arch=ubuntu-20.04_x86_64
          elif ${{ contains(matrix.os, 'mac-m1') }}; then
            platform_arch=macos_aarch64
          elif ${{ contains(matrix.os, 'macos') }}; then
            platform_arch=macos_x86_64
          fi
          wg_go_lib_name="wireguard-go_$platform_arch"
          # debug
          echo " ✓ PLATFORM_ARCH: $platform_arch"
          echo " ✓ WG_GO_LIB_NAME: $wg_go_lib_name"
          echo " ✓ WG_GO_LIB_PATH: ${{ env.WG_GO_LIB_PATH }}"
          # set github env
          echo "PLATFORM_ARCH=$platform_arch" >> $GITHUB_ENV
          echo "WG_GO_LIB_NAME=$wg_go_lib_name" >> $GITHUB_ENV

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Download wireguard-go artifacts (${{ env.PLATFORM_ARCH }})
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.WG_GO_LIB_NAME }}
          path: ${{ env.WG_GO_LIB_PATH }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'mac-m1')
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }}"
        run: cargo build --release --verbose

      - name: Run tests
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }}"
        run: cargo test --release --verbose

      - name: Get package name
        id: package-version
        uses: nicolaiunrein/cargo-get@master
        with:
          subcommand: package.version --entry="nym-vpn-cli"

      - name: Upload artifacts (${{ env.PLATFORM_ARCH }})
        uses: actions/upload-artifact@v4
        with:
          name: nym-vpn-cli_${{ steps.package-version.outputs.metadata }}_${{ env.PLATFORM_ARCH }}
          path: target/release/nym-vpn-cli

name: create-release-nym-vpn-core

on:
  workflow_dispatch:

jobs:
  check_admin_permission:
    runs-on: ubuntu-latest
    outputs:
      is_admin: ${{ steps.check.outputs.is_admin }}
    steps:
      - name: Check if user has admin access
        id: check
        run: |
          user_role=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission")
          permission=$(echo "$user_role" | jq -r '.permission')

          if [ "$permission" == "admin" ]; then
            echo "User ${{ github.actor }} is an admin."
            echo "is_admin=true" >> "$GITHUB_OUTPUT"
          else
            echo "User ${{ github.actor }} is not an admin."
            echo "is_admin=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_version:
    needs: check_admin_permission
    outputs:
      branch_name: ${{ steps.create_branch.outputs.branch_name }}
    if: needs.check_admin_permission.outputs.is_admin == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Setup branch name
        id: create_branch
        run: |
          BRANCH_NAME="release-nym-vpn-core-$(date +'%Y%m%d%H%M%S')"
          git checkout -b $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Install cargo-edit, cargo-get
        run: |
          cargo install --locked cargo-edit cargo-get

      - name: Run create-nym-vpn-core-release.sh
        run: |
          ./scripts/create-nym-vpn-core-release.sh --yes

      - name: Push commit with version bump to new branch
        run: |
          git push origin HEAD:${{ steps.create_branch.outputs.branch_name }}

  update_nym_vpn_apple:
    needs: create_version
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create_version.outputs.branch_name }}

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Cache cargo packages
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-edit, cargo-get
        run: |
          cargo install --locked cargo-edit cargo-get

      - name: Run update-nym-vpn-apple-to-latest-core.sh
        run: |
          ./scripts/update-nym-vpn-apple-to-latest-core.sh
          git diff
          git commit -a -m "Update Info.plist"
          git push

  create_pull_request:
    needs: [create_version, update_nym_vpn_apple]
    if: needs.check_admin_permission.outputs.is_admin == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create_version.outputs.branch_name }}

      - name: Install cargo-edit, cargo-get
        run: |
          cargo install --locked cargo-edit cargo-get

      - name: Run bump-nym-vpn-core-to-next-dev-version.sh
        run: |
          ./scripts/bump-nym-vpn-core-to-next-dev-version.sh --yes

      - name: Create PR
        uses: peter-evans/create-pull-request@v7
        with:
          ref: ${{ needs.create_version.outputs.branch_name }}
          title: "Release: ${{ needs.create_version.outputs.branch_name }}"
          body: "Automated PR for the release."
          base: "main"
          draft: true

name: ci-desktop-rust

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "nym-vpn-desktop/src-tauri/**"
      # also trigger the jobs on upstream dependencies changes
      - "wireguard/**"
      - "nym-vpn-lib/**"

jobs:
  build-wireguard-go:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]
    uses: ./.github/workflows/build-wireguard-go.yml
    with:
      os: ${{ matrix.os }}

  build-desktop:
    needs: build-wireguard-go
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: 'Cleanup working directory'
        if: contains(matrix.os, 'custom')
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./

      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            nym-vpn-desktop
            nym-vpn-lib

      - name: Download wireguard-go artifacts (ubuntu-22.04 x86_64)
        uses: actions/download-artifact@v4
        if: contains(matrix.os, 'ubuntu-22.04')
        with:
          name: wireguard-go_ubuntu-22.04_x86_64
          path: lib

      - name: Download wireguard-go artifacts (macos x86_64)
        uses: actions/download-artifact@v4
        if: contains(matrix.os, 'macos')
        with:
          name: wireguard-go_macos_x86_64
          path: lib

      - name: Set LIBRARY_PATH
        run: |
          echo "LIBRARY_PATH=${GITHUB_WORKSPACE}/lib" >> $GITHUB_ENV

      - name: Get version
        working-directory: nym-vpn-desktop/src-tauri
        run: |
          version=$(jq '.package.version' --raw-output tauri.conf.json)
          echo "âœ“ App version: $version"
          echo "APP_VERSION=$version" >> $GITHUB_ENV

      - name: Install system dependencies
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update && sudo apt-get install -y libdbus-1-dev libmnl-dev libnftnl-dev \
            protobuf-compiler libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev \
            libgtk-3-dev squashfs-tools libayatana-appindicator3-dev

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'mac-m1')
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Fmt check
        working-directory: nym-vpn-desktop/src-tauri
        run: RUSTFLAGS="-L ${{ env.LIBRARY_PATH }}" cargo fmt --check

      - name: Clippy check
        working-directory: nym-vpn-desktop/src-tauri
        run: RUSTFLAGS="-L ${{ env.LIBRARY_PATH }}" cargo clippy -- -Dwarnings


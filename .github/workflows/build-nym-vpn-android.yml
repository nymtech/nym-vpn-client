name: build-nym-vpn-android
on:
  workflow_dispatch:
    inputs:
      nightly:
        description: "Android nightly version"
        required: false
        default: true
        type: boolean
    secrets:
      ANDROID_SIGNING_KEY_ALIAS:
        required: true
      ANDROID_SIGNING_KEY_PASSWORD:
        required: true
      ANDROID_SIGNING_STORE_PASSWORD:
        required: true
      ANDROID_SENTRY_DSN:
        required: true
      ANDROID_SERVICE_ACCOUNT_JSON:
        required: true
      ANDROID_KEYSTORE:
        required: true
  workflow_call:
    inputs:
      nightly:
        description: "Android nightly version"
        required: false
        default: true
        type: boolean
    secrets:
      ANDROID_SIGNING_KEY_ALIAS:
        required: true
      ANDROID_SIGNING_KEY_PASSWORD:
        required: true
      ANDROID_SIGNING_STORE_PASSWORD:
        required: true
      ANDROID_SENTRY_DSN:
        required: true
      ANDROID_SERVICE_ACCOUNT_JSON:
        required: true
      ANDROID_KEYSTORE:
        required: true
env:
  UPLOAD_DIR_ANDROID: android_artifacts

jobs:
  build:
    runs-on: ubuntu-22.04-arc
    env:
      SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
      SENTRY_DSN: ${{ secrets.ANDROID_SENTRY_DSN }}
      KEY_STORE_FILE: 'android_keystore.jks'
      KEY_STORE_LOCATION: ${{ github.workspace }}/nym-vpn-android/app/keystore/
    defaults:
      run:
        working-directory: nym-vpn-android
    outputs:
      UPLOAD_DIR_ANDROID: ${{ env.UPLOAD_DIR_ANDROID }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Android SDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # Native build dependencies
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Add rust stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Add all targets
        run: |
          rustup target add \
            aarch64-linux-android \
            x86_64-linux-android \
            i686-linux-android

      - name: Add cargo-ndk
        run: |
          cargo install cargo-ndk

      - name: Install deps
        run: |
          sudo apt-get update && sudo apt-get install -y libdbus-1-dev libmnl-dev libnftnl-dev protobuf-compiler git curl gcc g++ make unzip

      - name: Nightly versioning
        if: ${{ inputs.nightly }}
        run: |
          versionCode=$(date '+%s')
          sed -i -e 's/\(VERSION_CODE = \).\(.*\)/\VERSION_CODE = '"$versionCode"'/' buildSrc/src/main/kotlin/Constants.kt
          versionName=$(grep "VERSION_NAME" buildSrc/src/main/kotlin/Constants.kt | awk '{print $5}' | tr -d '"')
          sed -i -e 's/\(VERSION_NAME = \).\(.*\)/\VERSION_NAME = "'"$versionName"'-'"$versionCode"'"/' buildSrc/src/main/kotlin/Constants.kt

      # Here we need to decode keystore.jks from base64 string and place it
      # in the folder specified in the release signing configuration
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: ${{ env.KEY_STORE_FILE }}
          fileDir: ${{ env.KEY_STORE_LOCATION }}
          encodedString: ${{ secrets.ANDROID_KEYSTORE }}

      # create keystore path for gradle to read
      - name: Create keystore path env var
        run: |
          store_path=${{ env.KEY_STORE_LOCATION }}${{ env.KEY_STORE_FILE }}
          echo "KEY_STORE_PATH=$store_path" >> $GITHUB_ENV

      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Build Release APK
        run: ./gradlew :app:assembleRelease --stacktrace
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Get apk path
        id: apk-path
        run: echo "path=$(find . -regex '^.*/build/outputs/apk/fdroid/release/.*\.apk$' -type f | head -1 | tail -c+2)" >> $GITHUB_OUTPUT

      - name: Upload apk
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_DIR_ANDROID }}
          path: ${{github.workspace}}/nym-vpn-android${{ steps.apk-path.outputs.path }}
          retention-days: 1

syntax = "proto3";

package nym.vpn;

message Empty {}

// Represents the identity of a gateway
message Gateway {
  string id = 1;
}

// Represents a nym-address of the form id.enc@gateway
message Address {
  string nym_address = 1;
}

message Location {
  string two_letter_iso_country_code = 1;
}

message EntryNode {
  oneof entry_node_enum {
    Gateway gateway = 1;
    Location location = 2;
    Empty random_low_latency = 3;
    Empty random = 4;
  }
}

message ExitNode {
  oneof exit_node_enum {
    Address address = 1;
    Gateway gateway = 2;
    Location location = 3;
    Empty random = 4;
  }
}

message Dns {
  string ip = 1;
}

message ConnectRequest {
  EntryNode entry = 1;
  ExitNode exit = 2;
  Dns dns = 3;
  bool disable_routing = 4;
  bool enable_two_hop = 5;
  bool enable_poisson_rate = 6;
  bool disable_background_cover_traffic = 7;
  bool enable_credentials_mode = 8;
}

message ConnectResponse {
  bool success = 1;
}

message DisconnectRequest {}
message DisconnectResponse {
  bool success = 1;
}

enum ConnectionStatus {
  STATUS_UNSPECIFIED = 0;
  UNKNOWN = 1;
  NOT_CONNECTED = 2;
  CONNECTING = 3;
  CONNECTED = 4;
  DISCONNECTING = 5;
  CONNECTION_FAILED = 6;
}

message StatusRequest {}
message StatusResponse {
  ConnectionStatus status = 1;
  Error error = 2;
}

message ConnectionStateChange {
  ConnectionStatus status = 1;
  Error error = 2;
}

message ConnectionStatusUpdate {
  string message = 1;
}

message Error {
  enum ErrorType {
    ERROR_TYPE_UNSPECIFIED = 0;
    NO_VALID_CREDENTIALS = 1;
    AUTHENTICATION_FAILED = 2;
    NETWORK_ISSUE = 3;
    INVALID_CONFIGURATION = 4;
    TIMEOUT = 5;
    PERMISSION_DENIED = 6;
    GENERIC = 7;
  }

  ErrorType kind = 1;

  // Detailed error message for logging and debuggning
  string message = 2;

  // Optional additional details
  map<string, string> details = 3;
}

message ImportUserCredentialRequest {
  bytes credential = 1;
}

message ImportUserCredentialResponse {
  bool success = 1;
  ImportError error = 2;
}

message ImportError {
  enum ImportErrorType {
    IMPORT_ERROR_TYPE_UNSPECIFIED = 0;
    VPN_RUNNING = 1;
    CREDENTIAL_ALREADY_IMPORTED = 2;
    STORAGE_ERROR = 3;
    DESERIALIZATION_FAILURE = 4;
    CREDENTIAL_EXPIRED = 5;
  }

  ImportErrorType kind = 1;

  // Detailed error message for logging and debugging
  string message = 2;

  // Optional additional details
  map<string, string> details = 3;
}

service NymVpnd {
  rpc VpnConnect (ConnectRequest) returns (ConnectResponse) {}
  rpc VpnDisconnect (DisconnectRequest) returns (DisconnectResponse) {}
  rpc VpnStatus (StatusRequest) returns (StatusResponse) {}
  rpc ImportUserCredential (ImportUserCredentialRequest) returns (ImportUserCredentialResponse) {}
  rpc ListenToConnectionStateChanges (Empty) returns (stream ConnectionStateChange) {}
  rpc ListenToConnectionStatus (Empty) returns (stream ConnectionStatusUpdate) {}
}


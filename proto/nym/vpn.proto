syntax = "proto3";

package nym.vpn;

message Empty {}

message Gateway {
  string id = 1;
  Location location = 2;
}

message Location {
  string two_letter_country_code = 1;
}

message Node {
  oneof node {
    Location location = 1;
    Gateway gateway = 2;
    Empty fastest = 3;
  }
}

message ConnectRequest {
  // Node entry = 1;
  // Node exit = 2;
}

message ConnectResponse {
  bool success = 1;
  // string message = 1;
}

message DisconnectRequest {}
message DisconnectResponse {
  bool success = 1;
}

enum VpnMode {
  MODE_UNSPECIFIED = 0;
  MIXNET_FIVE_HOP = 1;
  MIXNET_TWO_HOP = 2;
  WIREGUARD_TWO_HOP = 3;
}

enum ConnectionStatus {
  STATUS_UNSPECIFIED = 0;
  CONNECTED = 1;
  DISCONNECTED = 2;
  CONNECTING = 3;
  DISCONNECTING = 4;
  UNKNOWN = 5; // errored pending state etc
}

message LocationListResponse {
  repeated Location location = 1;
}

message SetVpnModeRequest {
  VpnMode mode = 1;
}

message GetVpnModeResponse {
  VpnMode mode = 1;
}

message GatewayResponse {
  Gateway gateways = 1;
}

message ConnectionStatusUpdate {
  ConnectionStatus status = 1;
  repeated ConnectionProgress connection_progress = 2;
  // optional Error error = 3;
}

message ConnectionProgress {
  string message = 1;
}

message Error {
  string message = 1;
  // ErrorType type = 2; // TOBE implemented
  // optional string source = 3;
}

message SetUserCredentialsRequest {
  string key = 1;
}

service NymVpnService {
  // rpc SetUserCredentials (SetUserCredentialsRequest) returns (Empty) {}
  rpc VpnConnect (ConnectRequest) returns (ConnectResponse) {}
  rpc VpnDisconnect (DisconnectRequest) returns (DisconnectResponse) {}
  // rpc ListenToConnectionStatus (Empty) returns (stream ConnectionStatusUpdate) {}
  // // Cancel any connection pending state (connecting, disconnecting etc)
  // // and return to disconnected state
  // rpc Cancel (Empty) returns (Empty) {}
  // rpc GetEntryNodeLocations (Empty) returns (LocationListResponse) {}
  // rpc GetExitNodeLocations (Empty) returns (LocationListResponse) {}
  // rpc GetFastestEntryGateway (Empty) returns (GatewayResponse) {}
  // rpc GetFastestExitGateway (Empty) returns (GatewayResponse) {}
  // rpc SetVpnMode (SetVpnModeRequest) returns (Empty) {}
  // rpc GetVpnMode (Empty) returns (GetVpnModeResponse) {}
}

